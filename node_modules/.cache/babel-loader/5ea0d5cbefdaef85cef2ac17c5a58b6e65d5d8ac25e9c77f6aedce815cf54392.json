{"ast":null,"code":"/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n  constructor() {\n    this.updatedURLs = [];\n    this.notUpdatedURLs = [];\n    this.handlerWillStart = async _ref => {\n      let {\n        request,\n        state\n      } = _ref;\n      // TODO: `state` should never be undefined...\n      if (state) {\n        state.originalRequest = request;\n      }\n    };\n    this.cachedResponseWillBeUsed = async _ref2 => {\n      let {\n        event,\n        state,\n        cachedResponse\n      } = _ref2;\n      if (event.type === 'install') {\n        if (state && state.originalRequest && state.originalRequest instanceof Request) {\n          // TODO: `state` should never be undefined...\n          const url = state.originalRequest.url;\n          if (cachedResponse) {\n            this.notUpdatedURLs.push(url);\n          } else {\n            this.updatedURLs.push(url);\n          }\n        }\n      }\n      return cachedResponse;\n    };\n  }\n}\nexport { PrecacheInstallReportPlugin };","map":{"version":3,"names":["PrecacheInstallReportPlugin","constructor","updatedURLs","notUpdatedURLs","handlerWillStart","_ref","request","state","originalRequest","cachedResponseWillBeUsed","_ref2","event","cachedResponse","type","Request","url","push"],"sources":["C:/Users/meyer/Documents/careerfoundry/meet/node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js"],"sourcesContent":["/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                if (state &&\n                    state.originalRequest &&\n                    state.originalRequest instanceof Request) {\n                    // TODO: `state` should never be undefined...\n                    const url = state.originalRequest.url;\n                    if (cachedResponse) {\n                        this.notUpdatedURLs.push(url);\n                    }\n                    else {\n                        this.updatedURLs.push(url);\n                    }\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAgB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,2BAA2B,CAAC;EAC9BC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACC,gBAAgB,GAAG,MAAAC,IAAA,IAA+B;MAAA,IAAxB;QAAEC,OAAO;QAAEC;MAAO,CAAC,GAAAF,IAAA;MAC9C;MACA,IAAIE,KAAK,EAAE;QACPA,KAAK,CAACC,eAAe,GAAGF,OAAO;MACnC;IACJ,CAAC;IACD,IAAI,CAACG,wBAAwB,GAAG,MAAAC,KAAA,IAA6C;MAAA,IAAtC;QAAEC,KAAK;QAAEJ,KAAK;QAAEK;MAAgB,CAAC,GAAAF,KAAA;MACpE,IAAIC,KAAK,CAACE,IAAI,KAAK,SAAS,EAAE;QAC1B,IAAIN,KAAK,IACLA,KAAK,CAACC,eAAe,IACrBD,KAAK,CAACC,eAAe,YAAYM,OAAO,EAAE;UAC1C;UACA,MAAMC,GAAG,GAAGR,KAAK,CAACC,eAAe,CAACO,GAAG;UACrC,IAAIH,cAAc,EAAE;YAChB,IAAI,CAACT,cAAc,CAACa,IAAI,CAACD,GAAG,CAAC;UACjC,CAAC,MACI;YACD,IAAI,CAACb,WAAW,CAACc,IAAI,CAACD,GAAG,CAAC;UAC9B;QACJ;MACJ;MACA,OAAOH,cAAc;IACzB,CAAC;EACL;AACJ;AACA,SAASZ,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
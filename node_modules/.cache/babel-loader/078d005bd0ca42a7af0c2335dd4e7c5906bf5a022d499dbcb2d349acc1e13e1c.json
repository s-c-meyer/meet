{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Modifies the default cache names used by the Workbox packages.\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\n *\n * @param {Object} details\n * @param {Object} [details.prefix] The string to add to the beginning of\n *     the precache and runtime cache names.\n * @param {Object} [details.suffix] The string to add to the end of\n *     the precache and runtime cache names.\n * @param {Object} [details.precache] The cache name to use for precache\n *     caching.\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\n * @param {Object} [details.googleAnalytics] The cache name to use for\n *     `workbox-google-analytics` caching.\n *\n * @memberof workbox-core\n */\nfunction setCacheNameDetails(details) {\n  if (process.env.NODE_ENV !== 'production') {\n    Object.keys(details).forEach(key => {\n      assert.isType(details[key], 'string', {\n        moduleName: 'workbox-core',\n        funcName: 'setCacheNameDetails',\n        paramName: \"details.\".concat(key)\n      });\n    });\n    if ('precache' in details && details['precache'].length === 0) {\n      throw new WorkboxError('invalid-cache-name', {\n        cacheNameId: 'precache',\n        value: details['precache']\n      });\n    }\n    if ('runtime' in details && details['runtime'].length === 0) {\n      throw new WorkboxError('invalid-cache-name', {\n        cacheNameId: 'runtime',\n        value: details['runtime']\n      });\n    }\n    if ('googleAnalytics' in details && details['googleAnalytics'].length === 0) {\n      throw new WorkboxError('invalid-cache-name', {\n        cacheNameId: 'googleAnalytics',\n        value: details['googleAnalytics']\n      });\n    }\n  }\n  cacheNames.updateDetails(details);\n}\nexport { setCacheNameDetails };","map":{"version":3,"names":["assert","cacheNames","WorkboxError","setCacheNameDetails","details","process","env","NODE_ENV","Object","keys","forEach","key","isType","moduleName","funcName","paramName","concat","length","cacheNameId","value","updateDetails"],"sources":["C:/Users/meyer/Documents/careerfoundry/meet/node_modules/workbox-core/setCacheNameDetails.js"],"sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Modifies the default cache names used by the Workbox packages.\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\n *\n * @param {Object} details\n * @param {Object} [details.prefix] The string to add to the beginning of\n *     the precache and runtime cache names.\n * @param {Object} [details.suffix] The string to add to the end of\n *     the precache and runtime cache names.\n * @param {Object} [details.precache] The cache name to use for precache\n *     caching.\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\n * @param {Object} [details.googleAnalytics] The cache name to use for\n *     `workbox-google-analytics` caching.\n *\n * @memberof workbox-core\n */\nfunction setCacheNameDetails(details) {\n    if (process.env.NODE_ENV !== 'production') {\n        Object.keys(details).forEach((key) => {\n            assert.isType(details[key], 'string', {\n                moduleName: 'workbox-core',\n                funcName: 'setCacheNameDetails',\n                paramName: `details.${key}`,\n            });\n        });\n        if ('precache' in details && details['precache'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'precache',\n                value: details['precache'],\n            });\n        }\n        if ('runtime' in details && details['runtime'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'runtime',\n                value: details['runtime'],\n            });\n        }\n        if ('googleAnalytics' in details &&\n            details['googleAnalytics'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'googleAnalytics',\n                value: details['googleAnalytics'],\n            });\n        }\n    }\n    cacheNames.updateDetails(details);\n}\nexport { setCacheNameDetails };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAO,eAAe;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAACC,OAAO,EAAE;EAClC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACvCC,MAAM,CAACC,IAAI,CAACL,OAAO,CAAC,CAACM,OAAO,CAAEC,GAAG,IAAK;MAClCX,MAAM,CAACY,MAAM,CAACR,OAAO,CAACO,GAAG,CAAC,EAAE,QAAQ,EAAE;QAClCE,UAAU,EAAE,cAAc;QAC1BC,QAAQ,EAAE,qBAAqB;QAC/BC,SAAS,aAAAC,MAAA,CAAaL,GAAG;MAC7B,CAAC,CAAC;IACN,CAAC,CAAC;IACF,IAAI,UAAU,IAAIP,OAAO,IAAIA,OAAO,CAAC,UAAU,CAAC,CAACa,MAAM,KAAK,CAAC,EAAE;MAC3D,MAAM,IAAIf,YAAY,CAAC,oBAAoB,EAAE;QACzCgB,WAAW,EAAE,UAAU;QACvBC,KAAK,EAAEf,OAAO,CAAC,UAAU;MAC7B,CAAC,CAAC;IACN;IACA,IAAI,SAAS,IAAIA,OAAO,IAAIA,OAAO,CAAC,SAAS,CAAC,CAACa,MAAM,KAAK,CAAC,EAAE;MACzD,MAAM,IAAIf,YAAY,CAAC,oBAAoB,EAAE;QACzCgB,WAAW,EAAE,SAAS;QACtBC,KAAK,EAAEf,OAAO,CAAC,SAAS;MAC5B,CAAC,CAAC;IACN;IACA,IAAI,iBAAiB,IAAIA,OAAO,IAC5BA,OAAO,CAAC,iBAAiB,CAAC,CAACa,MAAM,KAAK,CAAC,EAAE;MACzC,MAAM,IAAIf,YAAY,CAAC,oBAAoB,EAAE;QACzCgB,WAAW,EAAE,iBAAiB;QAC9BC,KAAK,EAAEf,OAAO,CAAC,iBAAiB;MACpC,CAAC,CAAC;IACN;EACJ;EACAH,UAAU,CAACmB,aAAa,CAAChB,OAAO,CAAC;AACrC;AACA,SAASD,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
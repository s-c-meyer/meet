{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#cache-first-falling-back-to-network)\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass CacheFirst extends Strategy {\n  /**\n   * @private\n   * @param {Request|string} request A request to run this strategy for.\n   * @param {workbox-strategies.StrategyHandler} handler The event that\n   *     triggered the request.\n   * @return {Promise<Response>}\n   */\n  async _handle(request, handler) {\n    const logs = [];\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isInstance(request, Request, {\n        moduleName: 'workbox-strategies',\n        className: this.constructor.name,\n        funcName: 'makeRequest',\n        paramName: 'request'\n      });\n    }\n    let response = await handler.cacheMatch(request);\n    let error = undefined;\n    if (!response) {\n      if (process.env.NODE_ENV !== 'production') {\n        logs.push(\"No response found in the '\".concat(this.cacheName, \"' cache. \") + \"Will respond with a network request.\");\n      }\n      try {\n        response = await handler.fetchAndCachePut(request);\n      } catch (err) {\n        if (err instanceof Error) {\n          error = err;\n        }\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (response) {\n          logs.push(\"Got response from network.\");\n        } else {\n          logs.push(\"Unable to get a response from the network.\");\n        }\n      }\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        logs.push(\"Found a cached response in the '\".concat(this.cacheName, \"' cache.\"));\n      }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n      for (const log of logs) {\n        logger.log(log);\n      }\n      messages.printFinalResponse(response);\n      logger.groupEnd();\n    }\n    if (!response) {\n      throw new WorkboxError('no-response', {\n        url: request.url,\n        error\n      });\n    }\n    return response;\n  }\n}\nexport { CacheFirst };","map":{"version":3,"names":["assert","logger","WorkboxError","Strategy","messages","CacheFirst","_handle","request","handler","logs","process","env","NODE_ENV","isInstance","Request","moduleName","className","constructor","name","funcName","paramName","response","cacheMatch","error","undefined","push","concat","cacheName","fetchAndCachePut","err","Error","groupCollapsed","strategyStart","log","printFinalResponse","groupEnd","url"],"sources":["C:/Users/meyer/Documents/careerfoundry/meet/node_modules/workbox-strategies/CacheFirst.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#cache-first-falling-back-to-network)\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass CacheFirst extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await handler.cacheMatch(request);\n        let error = undefined;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await handler.fetchAndCachePut(request);\n            }\n            catch (err) {\n                if (err instanceof Error) {\n                    error = err;\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAM,QAAQ,iCAAiC;AACxD,SAASC,MAAM,QAAQ,iCAAiC;AACxD,SAASC,YAAY,QAAQ,uCAAuC;AACpE,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAO,eAAe;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,SAASF,QAAQ,CAAC;EAC9B;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAMG,OAAOA,CAACC,OAAO,EAAEC,OAAO,EAAE;IAC5B,MAAMC,IAAI,GAAG,EAAE;IACf,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCZ,MAAM,CAACa,UAAU,CAACN,OAAO,EAAEO,OAAO,EAAE;QAChCC,UAAU,EAAE,oBAAoB;QAChCC,SAAS,EAAE,IAAI,CAACC,WAAW,CAACC,IAAI;QAChCC,QAAQ,EAAE,aAAa;QACvBC,SAAS,EAAE;MACf,CAAC,CAAC;IACN;IACA,IAAIC,QAAQ,GAAG,MAAMb,OAAO,CAACc,UAAU,CAACf,OAAO,CAAC;IAChD,IAAIgB,KAAK,GAAGC,SAAS;IACrB,IAAI,CAACH,QAAQ,EAAE;MACX,IAAIX,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QACvCH,IAAI,CAACgB,IAAI,CAAC,6BAAAC,MAAA,CAA6B,IAAI,CAACC,SAAS,uDACX,CAAC;MAC/C;MACA,IAAI;QACAN,QAAQ,GAAG,MAAMb,OAAO,CAACoB,gBAAgB,CAACrB,OAAO,CAAC;MACtD,CAAC,CACD,OAAOsB,GAAG,EAAE;QACR,IAAIA,GAAG,YAAYC,KAAK,EAAE;UACtBP,KAAK,GAAGM,GAAG;QACf;MACJ;MACA,IAAInB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QACvC,IAAIS,QAAQ,EAAE;UACVZ,IAAI,CAACgB,IAAI,6BAA6B,CAAC;QAC3C,CAAC,MACI;UACDhB,IAAI,CAACgB,IAAI,6CAA6C,CAAC;QAC3D;MACJ;IACJ,CAAC,MACI;MACD,IAAIf,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QACvCH,IAAI,CAACgB,IAAI,oCAAAC,MAAA,CAAoC,IAAI,CAACC,SAAS,aAAU,CAAC;MAC1E;IACJ;IACA,IAAIjB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCX,MAAM,CAAC8B,cAAc,CAAC3B,QAAQ,CAAC4B,aAAa,CAAC,IAAI,CAACf,WAAW,CAACC,IAAI,EAAEX,OAAO,CAAC,CAAC;MAC7E,KAAK,MAAM0B,GAAG,IAAIxB,IAAI,EAAE;QACpBR,MAAM,CAACgC,GAAG,CAACA,GAAG,CAAC;MACnB;MACA7B,QAAQ,CAAC8B,kBAAkB,CAACb,QAAQ,CAAC;MACrCpB,MAAM,CAACkC,QAAQ,CAAC,CAAC;IACrB;IACA,IAAI,CAACd,QAAQ,EAAE;MACX,MAAM,IAAInB,YAAY,CAAC,aAAa,EAAE;QAAEkC,GAAG,EAAE7B,OAAO,CAAC6B,GAAG;QAAEb;MAAM,CAAC,CAAC;IACtE;IACA,OAAOF,QAAQ;EACnB;AACJ;AACA,SAAShB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}
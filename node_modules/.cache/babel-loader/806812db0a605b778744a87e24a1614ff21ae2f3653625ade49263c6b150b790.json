{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst SUBSTRING_TO_FIND = '-precache-';\n/**\n * Cleans up incompatible precaches that were created by older versions of\n * Workbox, by a service worker registered under the current scope.\n *\n * This is meant to be called as part of the `activate` event.\n *\n * This should be safe to use as long as you don't include `substringToFind`\n * (defaulting to `-precache-`) in your non-precache cache names.\n *\n * @param {string} currentPrecacheName The cache name currently in use for\n * precaching. This cache won't be deleted.\n * @param {string} [substringToFind='-precache-'] Cache names which include this\n * substring will be deleted (excluding `currentPrecacheName`).\n * @return {Array<string>} A list of all the cache names that were deleted.\n *\n * @private\n * @memberof workbox-precaching\n */\nconst deleteOutdatedCaches = async function (currentPrecacheName) {\n  let substringToFind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SUBSTRING_TO_FIND;\n  const cacheNames = await self.caches.keys();\n  const cacheNamesToDelete = cacheNames.filter(cacheName => {\n    return cacheName.includes(substringToFind) && cacheName.includes(self.registration.scope) && cacheName !== currentPrecacheName;\n  });\n  await Promise.all(cacheNamesToDelete.map(cacheName => self.caches.delete(cacheName)));\n  return cacheNamesToDelete;\n};\nexport { deleteOutdatedCaches };","map":{"version":3,"names":["SUBSTRING_TO_FIND","deleteOutdatedCaches","currentPrecacheName","substringToFind","arguments","length","undefined","cacheNames","self","caches","keys","cacheNamesToDelete","filter","cacheName","includes","registration","scope","Promise","all","map","delete"],"sources":["C:/Users/meyer/Documents/careerfoundry/meet/node_modules/workbox-precaching/utils/deleteOutdatedCaches.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst SUBSTRING_TO_FIND = '-precache-';\n/**\n * Cleans up incompatible precaches that were created by older versions of\n * Workbox, by a service worker registered under the current scope.\n *\n * This is meant to be called as part of the `activate` event.\n *\n * This should be safe to use as long as you don't include `substringToFind`\n * (defaulting to `-precache-`) in your non-precache cache names.\n *\n * @param {string} currentPrecacheName The cache name currently in use for\n * precaching. This cache won't be deleted.\n * @param {string} [substringToFind='-precache-'] Cache names which include this\n * substring will be deleted (excluding `currentPrecacheName`).\n * @return {Array<string>} A list of all the cache names that were deleted.\n *\n * @private\n * @memberof workbox-precaching\n */\nconst deleteOutdatedCaches = async (currentPrecacheName, substringToFind = SUBSTRING_TO_FIND) => {\n    const cacheNames = await self.caches.keys();\n    const cacheNamesToDelete = cacheNames.filter((cacheName) => {\n        return (cacheName.includes(substringToFind) &&\n            cacheName.includes(self.registration.scope) &&\n            cacheName !== currentPrecacheName);\n    });\n    await Promise.all(cacheNamesToDelete.map((cacheName) => self.caches.delete(cacheName)));\n    return cacheNamesToDelete;\n};\nexport { deleteOutdatedCaches };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAgB;AACvB,MAAMA,iBAAiB,GAAG,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,GAAG,eAAAA,CAAOC,mBAAmB,EAA0C;EAAA,IAAxCC,eAAe,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,iBAAiB;EACxF,MAAMO,UAAU,GAAG,MAAMC,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,CAAC;EAC3C,MAAMC,kBAAkB,GAAGJ,UAAU,CAACK,MAAM,CAAEC,SAAS,IAAK;IACxD,OAAQA,SAAS,CAACC,QAAQ,CAACX,eAAe,CAAC,IACvCU,SAAS,CAACC,QAAQ,CAACN,IAAI,CAACO,YAAY,CAACC,KAAK,CAAC,IAC3CH,SAAS,KAAKX,mBAAmB;EACzC,CAAC,CAAC;EACF,MAAMe,OAAO,CAACC,GAAG,CAACP,kBAAkB,CAACQ,GAAG,CAAEN,SAAS,IAAKL,IAAI,CAACC,MAAM,CAACW,MAAM,CAACP,SAAS,CAAC,CAAC,CAAC;EACvF,OAAOF,kBAAkB;AAC7B,CAAC;AACD,SAASV,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#cache-only)\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\n *\n * If there is no cache match, this will throw a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass CacheOnly extends Strategy {\n  /**\n   * @private\n   * @param {Request|string} request A request to run this strategy for.\n   * @param {workbox-strategies.StrategyHandler} handler The event that\n   *     triggered the request.\n   * @return {Promise<Response>}\n   */\n  async _handle(request, handler) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isInstance(request, Request, {\n        moduleName: 'workbox-strategies',\n        className: this.constructor.name,\n        funcName: 'makeRequest',\n        paramName: 'request'\n      });\n    }\n    const response = await handler.cacheMatch(request);\n    if (process.env.NODE_ENV !== 'production') {\n      logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n      if (response) {\n        logger.log(\"Found a cached response in the '\".concat(this.cacheName, \"' \") + \"cache.\");\n        messages.printFinalResponse(response);\n      } else {\n        logger.log(\"No response found in the '\".concat(this.cacheName, \"' cache.\"));\n      }\n      logger.groupEnd();\n    }\n    if (!response) {\n      throw new WorkboxError('no-response', {\n        url: request.url\n      });\n    }\n    return response;\n  }\n}\nexport { CacheOnly };","map":{"version":3,"names":["assert","logger","WorkboxError","Strategy","messages","CacheOnly","_handle","request","handler","process","env","NODE_ENV","isInstance","Request","moduleName","className","constructor","name","funcName","paramName","response","cacheMatch","groupCollapsed","strategyStart","log","concat","cacheName","printFinalResponse","groupEnd","url"],"sources":["C:/Users/meyer/Documents/careerfoundry/meet/node_modules/workbox-strategies/CacheOnly.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#cache-only)\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\n *\n * If there is no cache match, this will throw a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass CacheOnly extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        const response = await handler.cacheMatch(request);\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Found a cached response in the '${this.cacheName}' ` + `cache.`);\n                messages.printFinalResponse(response);\n            }\n            else {\n                logger.log(`No response found in the '${this.cacheName}' cache.`);\n            }\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n}\nexport { CacheOnly };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAM,QAAQ,iCAAiC;AACxD,SAASC,MAAM,QAAQ,iCAAiC;AACxD,SAASC,YAAY,QAAQ,uCAAuC;AACpE,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAO,eAAe;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,SAASF,QAAQ,CAAC;EAC7B;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAMG,OAAOA,CAACC,OAAO,EAAEC,OAAO,EAAE;IAC5B,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCX,MAAM,CAACY,UAAU,CAACL,OAAO,EAAEM,OAAO,EAAE;QAChCC,UAAU,EAAE,oBAAoB;QAChCC,SAAS,EAAE,IAAI,CAACC,WAAW,CAACC,IAAI;QAChCC,QAAQ,EAAE,aAAa;QACvBC,SAAS,EAAE;MACf,CAAC,CAAC;IACN;IACA,MAAMC,QAAQ,GAAG,MAAMZ,OAAO,CAACa,UAAU,CAACd,OAAO,CAAC;IAClD,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCV,MAAM,CAACqB,cAAc,CAAClB,QAAQ,CAACmB,aAAa,CAAC,IAAI,CAACP,WAAW,CAACC,IAAI,EAAEV,OAAO,CAAC,CAAC;MAC7E,IAAIa,QAAQ,EAAE;QACVnB,MAAM,CAACuB,GAAG,CAAC,mCAAAC,MAAA,CAAmC,IAAI,CAACC,SAAS,kBAAe,CAAC;QAC5EtB,QAAQ,CAACuB,kBAAkB,CAACP,QAAQ,CAAC;MACzC,CAAC,MACI;QACDnB,MAAM,CAACuB,GAAG,8BAAAC,MAAA,CAA8B,IAAI,CAACC,SAAS,aAAU,CAAC;MACrE;MACAzB,MAAM,CAAC2B,QAAQ,CAAC,CAAC;IACrB;IACA,IAAI,CAACR,QAAQ,EAAE;MACX,MAAM,IAAIlB,YAAY,CAAC,aAAa,EAAE;QAAE2B,GAAG,EAAEtB,OAAO,CAACsB;MAAI,CAAC,CAAC;IAC/D;IACA,OAAOT,QAAQ;EACnB;AACJ;AACA,SAASf,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = url => {\n  const urlObj = new URL(String(url), location.href);\n  // See https://github.com/GoogleChrome/workbox/issues/2323\n  // We want to include everything, except for the origin if it's same-origin.\n  return urlObj.href.replace(new RegExp(\"^\".concat(location.origin)), '');\n};\nexport { getFriendlyURL };","map":{"version":3,"names":["getFriendlyURL","url","urlObj","URL","String","location","href","replace","RegExp","concat","origin"],"sources":["C:/Users/meyer/Documents/careerfoundry/meet/node_modules/workbox-core/_private/getFriendlyURL.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAgB;AACvB,MAAMA,cAAc,GAAIC,GAAG,IAAK;EAC5B,MAAMC,MAAM,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACH,GAAG,CAAC,EAAEI,QAAQ,CAACC,IAAI,CAAC;EAClD;EACA;EACA,OAAOJ,MAAM,CAACI,IAAI,CAACC,OAAO,CAAC,IAAIC,MAAM,KAAAC,MAAA,CAAKJ,QAAQ,CAACK,MAAM,CAAE,CAAC,EAAE,EAAE,CAAC;AACrE,CAAC;AACD,SAASV,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n  if (urls.length === 0) {\n    return;\n  }\n  logger.groupCollapsed(groupTitle);\n  for (const url of urls) {\n    logger.log(url);\n  }\n  logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n  const precachedCount = urlsToPrecache.length;\n  const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n  if (precachedCount || alreadyPrecachedCount) {\n    let message = \"Precaching \".concat(precachedCount, \" file\").concat(precachedCount === 1 ? '' : 's', \".\");\n    if (alreadyPrecachedCount > 0) {\n      message += \" \".concat(alreadyPrecachedCount, \" \") + \"file\".concat(alreadyPrecachedCount === 1 ? ' is' : 's are', \" already cached.\");\n    }\n    logger.groupCollapsed(message);\n    _nestedGroup(\"View newly precached URLs.\", urlsToPrecache);\n    _nestedGroup(\"View previously precached URLs.\", urlsAlreadyPrecached);\n    logger.groupEnd();\n  }\n}","map":{"version":3,"names":["logger","_nestedGroup","groupTitle","urls","length","groupCollapsed","url","log","groupEnd","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","message","concat"],"sources":["C:/Users/meyer/Documents/careerfoundry/meet/node_modules/workbox-precaching/utils/printInstallDetails.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message +=\n                ` ${alreadyPrecachedCount} ` +\n                    `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAM,QAAQ,iCAAiC;AACxD,OAAO,gBAAgB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,UAAU,EAAEC,IAAI,EAAE;EACpC,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;IACnB;EACJ;EACAJ,MAAM,CAACK,cAAc,CAACH,UAAU,CAAC;EACjC,KAAK,MAAMI,GAAG,IAAIH,IAAI,EAAE;IACpBH,MAAM,CAACO,GAAG,CAACD,GAAG,CAAC;EACnB;EACAN,MAAM,CAACQ,QAAQ,CAAC,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAACC,cAAc,EAAEC,oBAAoB,EAAE;EACtE,MAAMC,cAAc,GAAGF,cAAc,CAACN,MAAM;EAC5C,MAAMS,qBAAqB,GAAGF,oBAAoB,CAACP,MAAM;EACzD,IAAIQ,cAAc,IAAIC,qBAAqB,EAAE;IACzC,IAAIC,OAAO,iBAAAC,MAAA,CAAiBH,cAAc,WAAAG,MAAA,CAAQH,cAAc,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,MAAG;IACpF,IAAIC,qBAAqB,GAAG,CAAC,EAAE;MAC3BC,OAAO,IACH,IAAAC,MAAA,CAAIF,qBAAqB,gBAAAE,MAAA,CACdF,qBAAqB,KAAK,CAAC,GAAG,KAAK,GAAG,OAAO,qBAAkB;IAClF;IACAb,MAAM,CAACK,cAAc,CAACS,OAAO,CAAC;IAC9Bb,YAAY,+BAA+BS,cAAc,CAAC;IAC1DT,YAAY,oCAAoCU,oBAAoB,CAAC;IACrEX,MAAM,CAACQ,QAAQ,CAAC,CAAC;EACrB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}